import React, { useState } from 'react';
import { UserGame } from "@/entities/all";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Switch } from "@/components/ui/switch";
import { Users, X, Shield, Globe } from "lucide-react";

export default function CreateTeamDialog({ currentUser, games, onSave, onCancel }) {
    const [teamData, setTeamData] = useState({
        team_name: '',
        game_id: '',
        description: '',
        max_members: 5,
        is_private: false,
        team_type: 'casual',
        required_skill_level: 'any',
        team_schedule: '',
        team_goals: ''
    });
    const [userGames, setUserGames] = useState([]);
    const [isLoading, setIsLoading] = useState(false);

    React.useEffect(() => {
        const loadUserGames = async () => {
            try {
                const myGames = await UserGame.filter({ user_id: currentUser.id });
                setUserGames(myGames);
            } catch (error) {
                console.error("Error loading user games:", error);
            }
        };
        if (currentUser) loadUserGames();
    }, [currentUser]);

    const handleSave = async () => {
        if (!teamData.team_name.trim() || !teamData.game_id) {
            return;
        }
        
        setIsLoading(true);
        try {
            await onSave(teamData);
        } finally {
            setIsLoading(false);
        }
    };

    // Filter games to only show those in user's library
    const availableGames = games.filter(game => 
        userGames.some(ug => ug.game_id === game.id)
    );

    return (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center p-4 z-50">
            <Card className="bg-slate-900/90 backdrop-blur-xl border-[#00FF41]/50 w-full max-w-2xl max-h-[90vh] overflow-y-auto">
                <CardHeader className="border-b border-[#00FF41]/30">
                    <div className="flex items-center justify-between">
                        <CardTitle className="text-[#00FF41] text-xl flex items-center gap-2">
                            <Users className="w-6 h-6" />
                            Create New Team
                        </CardTitle>
                        <Button variant="ghost" size="icon" onClick={onCancel}>
                            <X className="w-5 h-5" />
                        </Button>
                    </div>
                </CardHeader>

                <CardContent className="p-6 space-y-4">
                    <div>
                        <label className="text-sm text-gray-300 mb-2 block">Team Name *</label>
                        <Input
                            value={teamData.team_name}
                            onChange={(e) => setTeamData({...teamData, team_name: e.target.value})}
                            placeholder="Enter team name..."
                            className="bg-slate-800/50 border-purple-800/30 text-white"
                        />
                    </div>

                    <div>
                        <label className="text-sm text-gray-300 mb-2 block">Game *</label>
                        <select
                            value={teamData.game_id}
                            onChange={(e) => setTeamData({...teamData, game_id: e.target.value})}
                            className="w-full bg-slate-800/50 border border-purple-800/30 rounded px-3 py-2 text-white"
                        >
                            <option value="">Select a game from your library...</option>
                            {availableGames.map(game => (
                                <option key={game.id} value={game.id}>{game.title}</option>
                            ))}
                        </select>
                        {availableGames.length === 0 && (
                            <p className="text-xs text-gray-400 mt-1">Add games to your library first to create teams</p>
                        )}
                    </div>

                    <div>
                        <label className="text-sm text-gray-300 mb-2 block">Description</label>
                        <Textarea
                            value={teamData.description}
                            onChange={(e) => setTeamData({...teamData, description: e.target.value})}
                            placeholder="Describe your team, requirements, goals..."
                            className="bg-slate-800/50 border-purple-800/30 text-white h-24"
 
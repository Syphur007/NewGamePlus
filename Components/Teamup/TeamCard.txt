import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import { Users, Shield, Globe, Crown, Clock, Trophy, Eye } from "lucide-react";

export default function TeamCard({ team, game, creator, currentUser, onJoin, onViewDetails, isMember }) {
    const getTeamTypeColor = (type) => {
        const colors = {
            casual: "bg-blue-600/20 text-blue-200 border-blue-500",
            competitive: "bg-red-600/20 text-red-200 border-red-500",
            ranked: "bg-purple-600/20 text-purple-200 border-purple-500",
            tournament: "bg-yellow-600/20 text-yellow-200 border-yellow-500",
            clan: "bg-green-600/20 text-green-200 border-green-500"
        };
        return colors[type] || colors.casual;
    };

    const getSkillLevelColor = (level) => {
        const colors = {
            any: "bg-gray-600/20 text-gray-200 border-gray-500",
            beginner: "bg-green-600/20 text-green-200 border-green-500",
            intermediate: "bg-yellow-600/20 text-yellow-200 border-yellow-500",
            advanced: "bg-orange-600/20 text-orange-200 border-orange-500",
            expert: "bg-red-600/20 text-red-200 border-red-500"
        };
        return colors[level] || colors.any;
    };

    return (
        <Card className="bg-slate-800/50 border-purple-800/30 hover:border-purple-600/50 transition-all duration-300">
            <CardHeader className="pb-3">
                <div className="flex items-start justify-between">
                    <div className="flex-1">
                        <div className="flex items-center gap-2 mb-2">
                            {team.is_private ? (
                                <Shield className="w-4 h-4 text-red-400" />
                            ) : (
                                <Globe className="w-4 h-4 text-[#00FF41]" />
                            )}
                            <CardTitle className="text-white text-lg">{team.team_name}</CardTitle>
                        </div>
                        
                        <div className="flex items-center gap-2">
                            <Avatar className="w-6 h-6">
                                <AvatarImage src={creator?.avatar_url} />
                                <AvatarFallback className="text-xs">
                                    {creator?.display_name?.[0] || 'U'}
                                </AvatarFallback>
                            </Avatar>
                            <span className="text-sm text-gray-400">
                                by {creator?.display_name || 'Unknown'}
                            </span>
                            {creator?.id === currentUser?.id && (
                                <Crown className="w-4 h-4 text-yellow-400" />
                            )}
                        </div>
                    </div>
                    
                    <div className="text-right">
                        <p className="text-xs text-gray-400">Members</p>
                        <p className="text-lg font-bold text-[#00FF41]">
                            {team.current_members || 1}/{team.max_members}
                        </p>
                    </div>
                </div>
            </CardHeader>
            
            <CardContent className="space-y-4">
                <div>
                    <h4 className="text-sm font-semibold text-purple-300 mb-1">Game</h4>
                    <p className="text-white">{game?.title || 'Unknown Game'}</p>
                </div>
                
                {team.description && (
                    <div>
                        <h4 className="text-sm font-semibold text-purple-300 mb-1">Description</h4>
                        <p className="text-gray-300 text-sm line-clamp-3">{team.description}</p>
                    </div>
                )}
                
                <div className="flex flex-wrap gap-2">
                    <Badge variant="outline" className={getTeamTypeColor(team.team_type)}>
                        {team.team_type}
                    </Badge>
                    <Badge variant="outline" className={getSkillLevelColor(team.required_skill_level)}>
                        {team.required_skill_level} skill
                    </Badge>
                    <Badge variant="outline" className="bg-slate-600/20 text-slate-200 border-slate-500">
                        <Trophy className="w-3 h-3 mr-1" />
                        {team.status}
                    </Badge>
                </div>
                
                {team.team_schedule && (
                    <div className="flex items-center gap-2 text-sm text-gray-400">
                        <Clock className="w-4 h-4" />
                        <span>{team.team_schedule}</span>
                    </div>
                )}
                
                <div className="flex gap-2 pt-2">
                    <Button
 